<?php
/**
 * Implements hook_update()
 *
 * Perform actions to update values to Monsido module.
 */
function highwire_site_style_update_9001(){
  /* For Monsido Module */
  $monsido_enable=\Drupal::service('module_installer')->install(['highwire_monsido'], TRUE);
  if (!$monsido_enable) {
    throw new DrupalUpdateException('Monsido module not enabled.');
  }
  else {
    $config = \Drupal::service('config.factory')->getEditable('highwire_monsido.settings');
    $config->set('monsido_token', 'HBktah_nQR6S6dpnyfGZow')->save();
  }
}

/**
 * Implements hook_update()
 *
 * Perform actions to update values to TrendMD module.
 */
function highwire_site_style_update_9002(){
  /* For trendmd */
  $trendmd_enable = \Drupal::service('module_installer')->install(['highwire_trendmd'], TRUE);
  if (!$trendmd_enable) {
	  throw new DrupalUpdateException('TrendMD module not enabled.');
  }
}

/**
 * Implements hook_update()
 *
 * Perform actions to update values to Eletter module.
 */
function highwire_site_style_update_9003(){
  /* For Eletter module */
  $Eletter_enable = \Drupal::service('module_installer')->install(['highwire_eletter'], TRUE);
  if (!$Eletter_enable) {
	  throw new DrupalUpdateException('Eletter module are not enabled.');
  }
}

/**
 * Implements hook_update()
 *
 * Perform actions to update values to Crazy Egg module.
 */
function highwire_site_style_update_9004()
{
    /* For enable Crazy Egg Module */
    $crazy_egg_enable = \Drupal::service("module_installer")->install(["crazyegg"],true);
    if (!$crazy_egg_enable) {
        throw new DrupalUpdateException("Crazy Egg module are not enabled.");
    } else {
        $config = \Drupal::service("config.factory")->getEditable("crazyegg.settings");
        $config->set("crazyegg_account_id", "00566375")->save();
        // Get the current configuration values.
        $roles_excluded = $config->get("crazyegg_roles_excluded");
        $roles_excluded["anonymous"] = "0";
        // Set the updated configuration values.
        $config->set("crazyegg_roles_excluded", $roles_excluded)->save();
        $roles = user_roles(true);
        foreach ($roles as $role_id => $role) {
            if ($role_id != "authenticated") {
                $roles_excluded[$role_id] = $role_id;
            } else {
                $roles_excluded[$role_id] = "0";
            }
            $config->set("crazyegg_roles_excluded", $roles_excluded)->save();
        }
    }
}

/**
 * Implements hook_update()
 *
 * Perform actions to update values to Google Translate module.
 */
function highwire_site_style_update_9005()
{
    /* For enable Google Translate Module */
    $gtranslate_enable = \Drupal::service("module_installer")->install(["gtranslate"],true);
    if (!$gtranslate_enable) {
        throw new DrupalUpdateException("Google Translate Module are not enabled.");
    } else {
        $config = \Drupal::service("config.factory")->getEditable("gtranslate.settings");
        /* for custom css in Google Translate form */
        $config->set("custom_css", ".gt_switcher_wrapper{\r\nposition: unset !important;\r\n}")->save();
        $config->set("position", "top-right")->save();
        /* To set Dropdown in Google Translate form */
        $config->set("widget_look", "dropdown")->save();
        /* for enable language in Google Translate form */
        $langs = $config->get("languages");
        foreach ($langs as $lang_name => $lang) {
            $langs[$lang_name] = $lang_name;
        }
        $config->set("languages", $langs)->save();
    }
}

/**
 * Implements hook_update()
 *
 * Perform actions to update values to Disqus module.
 */
function highwire_site_style_update_9006()
{
    /* For enable Google Translate Module */
    $disqus_enable = \Drupal::service("module_installer")->install(["disqus"],true);
    if (!$disqus_enable) {
        throw new DrupalUpdateException("Disqus Module are not enabled.");
    } else {
        $config_factory = \Drupal::service('config.factory');
        $config = $config_factory->getEditable('disqus.settings');
        /* To set the Disqus ID */
        $config->set("disqus_domain", "hwjma")->save();
        /* To set permission for anonymous role */
        $anonymous_var = \Drupal::configFactory()->getEditable('user.role.anonymous');
        $anonymous=$anonymous_var->get('permissions');
        array_push($anonymous,"view disqus comments");
        $anonymous_var->set('permissions', $anonymous)->save();
        /* To set permission for authenticated role */
        $auth_var = \Drupal::configFactory()->getEditable('user.role.authenticated');
        $auth=$auth_var->get('permissions');
        array_push($auth,"view disqus comments");
        $auth_var->set('permissions', $auth)->save();
    }
}
